name: PR build and merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set up its cache
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project dependancies
        run: uv sync --all-extras --dev

      - name: Create the .env file
        run: cp env.example .env
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Run linting
        run: uv run ruff check .

      # TODO: Add formatting checks

      - name: Run type checks
        run: uv run mypy .

      - name: Run security checks
        run: uv run bandit -c pyproject.toml -r .

      - name: Run tests
        run: uv run pytest

      # TODO: save coverage report in artefacts
      # TODO: Generate the openapi.json spec and save it as artefact
      # TODO: Build the production docker container
